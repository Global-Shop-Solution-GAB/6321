Program.Sub.ScreenSU.Start
Gui.f_Main..Create(BaseForm)
Gui.f_Main..Caption("Maintain Government Clauses")
Gui.f_Main..Size(623,720)
Gui.f_Main..MinX(0)
Gui.f_Main..MinY(0)
Gui.f_Main..Position(0,0)
Gui.f_Main..AlwaysOnTop(False)
Gui.f_Main..FontName("Tahoma")
Gui.f_Main..FontSize(8.25)
Gui.f_Main..ControlBox(True)
Gui.f_Main..MaxButton(False)
Gui.f_Main..MinButton(True)
Gui.f_Main..MousePointer(0)
Gui.f_Main..Moveable(True)
Gui.f_Main..Sizeable(False)
Gui.f_Main..ShowInTaskBar(True)
Gui.f_Main..TitleBar(True)
Gui.f_Main..Event(UnLoad,Form_UnLoad)
Gui.f_Main.frameClause.Create(Frame)
Gui.f_Main.frameClause.Enabled(True)
Gui.f_Main.frameClause.Visible(True)
Gui.f_Main.frameClause.Zorder(0)
Gui.f_Main.frameClause.Size(623,690)
Gui.f_Main.frameClause.Position(0,0)
Gui.f_Main.frameClause.Caption("Clauses")
Gui.f_Main.frameClause.FontName("Tahoma")
Gui.f_Main.frameClause.FontSize(8.25)
Gui.f_Main.frameClause.Dock(5)
Gui.f_Main.frameClause.BorderStyle(1)
Gui.f_Main.frameClause.Anchor(15)
Gui.f_Main.GsGcClauses.Create(GsGridControl)
Gui.f_Main.GsGcClauses.Enabled(True)
Gui.f_Main.GsGcClauses.Visible(True)
Gui.f_Main.GsGcClauses.Zorder(0)
Gui.f_Main.GsGcClauses.Size(623,664)
Gui.f_Main.GsGcClauses.Position(0,26)
Gui.f_Main.GsGcClauses.Parent("frameClause")
Gui.f_Main.GsGcClauses.Dock(5)
Gui.f_Main.cmdSave.Create(Button)
Gui.f_Main.cmdSave.Enabled(True)
Gui.f_Main.cmdSave.Visible(True)
Gui.f_Main.cmdSave.Zorder(0)
Gui.f_Main.cmdSave.Size(58,23)
Gui.f_Main.cmdSave.Position(557,1)
Gui.f_Main.cmdSave.Caption("Save")
Gui.f_Main.cmdSave.FontName("Tahoma")
Gui.f_Main.cmdSave.FontSize(8.25)
Gui.f_Main.cmdSave.Parent("frameClause")
Gui.f_Main.cmdSave.Event(Click,cmdSave_Click)
Gui.f_Main.cmdSave.Anchor(9)
Gui.f_Main.cmdSave.TabStop(True)
Gui.f_Main.cmdSave.TabIndex(21)
Gui.f_Edit..Create(BaseForm)
Gui.f_Edit..Caption("View/Edit Clauses")
Gui.f_Edit..Size(1045,867)
Gui.f_Edit..MinX(0)
Gui.f_Edit..MinY(0)
Gui.f_Edit..Position(0,0)
Gui.f_Edit..AlwaysOnTop(False)
Gui.f_Edit..FontName("Tahoma")
Gui.f_Edit..FontSize(8.25)
Gui.f_Edit..ControlBox(True)
Gui.f_Edit..MaxButton(False)
Gui.f_Edit..MinButton(True)
Gui.f_Edit..MousePointer(0)
Gui.f_Edit..Moveable(True)
Gui.f_Edit..Sizeable(False)
Gui.f_Edit..ShowInTaskBar(True)
Gui.f_Edit..TitleBar(True)
Gui.f_Edit..Event(UnLoad,Form_UnLoad)
Gui.f_Edit.lblMain.Create(Label,"",True,1,13,0,14,10,True,0,"Tahoma",8.25,,0,0)
Gui.f_Edit.lblMain.BorderStyle(0)
Gui.f_Edit.lblMain.FontStyle(True,False,False,False,False)
Gui.f_Edit.GsGcClauses.Create(GsGridControl)
Gui.f_Edit.GsGcClauses.Enabled(True)
Gui.f_Edit.GsGcClauses.Visible(True)
Gui.f_Edit.GsGcClauses.Zorder(0)
Gui.f_Edit.GsGcClauses.Size(1045,800)
Gui.f_Edit.GsGcClauses.Position(0,37)
Gui.f_Edit.GsGcClauses.Dock(2)
Gui.f_Edit.GsGcClauses.Anchor(15)
Gui.f_Edit.cmdSave.Create(Button)
Gui.f_Edit.cmdSave.Enabled(True)
Gui.f_Edit.cmdSave.Visible(True)
Gui.f_Edit.cmdSave.Zorder(0)
Gui.f_Edit.cmdSave.Size(50,23)
Gui.f_Edit.cmdSave.Position(987,6)
Gui.f_Edit.cmdSave.Caption("Save")
Gui.f_Edit.cmdSave.FontName("Tahoma")
Gui.f_Edit.cmdSave.FontSize(8.25)
Gui.f_Edit.cmdSave.Anchor(9)
Gui.f_Edit.cmdSave.Event(Click,cmdEditSave_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
V.Global.bError.Declare(Boolean)
V.Global.bUnattended.Declare(Boolean)
V.Global.sCust.Declare(String)
V.Global.sSO.Declare(String)
V.Global.sSOLine.Declare(String)
V.Global.sFlag.Declare(String, "")
Program.Sub.Preflight.End

Program.Sub.Main.Start
F.Intrinsic.Control.Try
V.Local.sLabel.Declare(String)
V.Local.sSOLine.Declare(String)
Function.Intrinsic.UI.UsePixels ' Allows you to use Pixels instead of Twips throughout

F.ODBC.Connection!con.OpenConnection(V.Ambient.PDSN, V.Ambient.PUser, V.Ambient.PPass)

'check which hook the script is firing from
F.Intrinsic.Control.SelectCase(V.Caller.Hook)
'customer master populate hook
f.Intrinsic.Control.Case(14350)
	V.Passed.000201.Set("Flowdowns")
'script 1 button customer master
F.Intrinsic.Control.Case(14360)
	V.Global.sCust.Set(V.Passed.000002)
	V.Global.sFlag.Set("CM")
	F.Intrinsic.String.Build("Additional Information for Customer:          {0}", V.Global.sCust.Trim, V.Local.sLabel)
	Gui.f_Edit.lblMain.Caption(V.Local.sLabel)
	F.Intrinsic.Control.CallSub(EditGridLoad)
	F.Intrinsic.Control.CallSub(LoadCustClauses)
	Gui.f_Edit..Show
'Sales Order Header Populate
F.Intrinsic.Control.Case(11560)
	V.Passed.000201.Set("Flowdowns")
'Sales Order Header Script 1
F.Intrinsic.Control.Case(11910)
	
	V.Global.sSO.Set(V.Passed.000003)
	F.Intrinsic.String.LPad(V.Global.sSO, 0, 7, V.Global.sSO)
	F.Intrinsic.Control.If(V.Global.sSO.Trim,<>,"", "OR", V.Global.sSO.Trim,<>,"0000000")
		V.Global.sFlag.Set("SO")
		V.Global.sCust.Set(V.Passed.000006)
		F.Intrinsic.String.Build("Additional Information for Sales Order:          {0}", V.Global.sSO.Trim, V.Local.sLabel)
		Gui.f_Edit.lblMain.Caption(V.Local.sLabel)
		F.Intrinsic.Control.CallSub(EditGridLoad)
		F.Intrinsic.Control.CallSub(LoadSOClauses)
		Gui.f_Edit..Show
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox("You must select a Sales Order before you can continue.", "Error")
		F.Intrinsic.Control.CallSub(form_Unload)
	F.Intrinsic.Control.EndIf
'Sales Order Line Populate
F.Intrinsic.Control.Case(12010)
	'Set horizontal position
	F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PL",285)
	'Set vertical position
	F.Intrinsic.Variable.SetProperty("GAB-BTN-1", "PT",630)
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-BTN-1, "HIDE", 0)
	F.Intrinsic.UI.ChangeCallerProperty(V.Passed.GAB-BTN-1, "LOCK", 0)
	V.Passed.GAB-BTN-1.Set("Flowdowns")
'Sales Order Line Custom GAB Button 1
F.Intrinsic.Control.Case(12431)
	V.Global.sFlag.Set("SL")
	V.Global.sSO.Set(V.Passed.000060)
	F.Intrinsic.String.LPad(V.Global.sSO, 0, 7, V.Global.sSO)
	V.Global.sSOLine.Set(V.Passed.000051)
	F.Intrinsic.String.LPad(V.Global.sSOLine, 0, 3, v.Global.sSOLine)
	F.Intrinsic.String.RPad(V.Global.sSOLine,0,4, V.Global.sSOLine)
	F.Intrinsic.String.Left(V.Global.sSOLine, 3, V.Local.sSOLine)
	F.Intrinsic.String.Build("Additional Information for Sales Order:          {0}-{1}", V.Global.sSO.Trim, V.Local.sSOLine.Trim,V.Local.sLabel)
	Gui.f_Edit.lblMain.Caption(V.Local.sLabel)
	F.Intrinsic.Control.CallSub(EditGridLoad)
	F.Intrinsic.Control.CallSub(LoadSOLineClauses)
	Gui.f_Edit..Show
'opening the clause maintenance screen from menu 
F.Intrinsic.Control.CaseElse

	F.Intrinsic.Control.CallSub(MaintGridLoad)
	F.Intrinsic.Control.CallSub(FormatMaintGrid)
	Gui.f_Main..Show
F.Intrinsic.Control.EndSelect

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.MaintGridLoad.Start
F.Intrinsic.Control.Try
V.Local.sSQL.Declare(String)

'GCG_6321_CLAUSEMAINT

F.Intrinsic.Control.If(V.DataTable.dtClauseMaint.Exists)
	F.Data.DataTable.Close("dtClauseMaint")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtClauseMaint", "con", "SELECT TYPE, CLAUSE, CLAUSE_NO FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO", True)

F.Data.DataTable.AddRowChangedEventHandler("dtClauseMaint", "AddRemoveMaintRow")

F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.MaintGridLoad.End

Program.Sub.FormatMaintGrid.Start
F.Intrinsic.Control.Try
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

Gui.f_Main.GsGcClauses.AddGridviewFromDatatable("gvClauseMaint","dtClauseMaint")
V.Local.sGV.Set("gvClauseMaint")
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV,"OptionsViewShowGroupPanel",False)
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV,"EnableAppearanceOddRow",True)
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV, "AllowAddRows", True)
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV, "AllowDeleteRows", True)
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV, "Editable", True)
Gui.f_Main.GsGcClauses.SetGridviewProperty(V.Local.sGV, "ReadOnly", False)

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, "Clause Type")
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, "Clause")

V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, V.Local.sDefault)
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, V.Local.sDefault)

V.Local.sProperty.Set("MinWidth")
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, 150)
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, 250)

V.Local.sProperty.Set("Visible")
Gui.f_Main.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause_No", V.Local.sProperty, False)

Gui.f_Main.GsGcClauses.MainView(V.Local.sGV)
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormatMaintGrid.End

Program.Sub.AddRemoveMaintRow.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(Long)
V.Local.iCnt2.Declare(Long)
V.Local.iClauseNo.Declare(Long)
V.Local.sAction.Declare(String)
V.Local.sClause.Declare(String)
V.Local.sRow.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)
V.Local.sRowState.Declare(String)

F.Intrinsic.Control.BlockEvents
V.Local.sAction.Set(V.Args.Action)
v.Local.iCnt.Set(V.Args.Index)
V.Local.sRowState.Set(V.Args.Rowstate)

'check to see if the user is adding or removing a row
F.Intrinsic.Control.If(V.Local.sAction,=,16)
	F.Intrinsic.Control.If(V.DataTable.dtClauseMaint(V.Local.iCnt).CLAUSE_NO!FieldVal,=,"")
		V.Local.sSQL.Set("SELECT TOP 1 CLAUSE_NO FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO DESC")
		F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL,V.Local.iClauseNo)
		f.Intrinsic.Control.If(V.Local.iClauseNo.String,<>,"")
			f.Intrinsic.Math.Add(v.Local.iClauseNo,1, v.Local.iClauseNo)
		f.Intrinsic.Control.Else
			v.Local.iClauseNo.Set(1)
		f.Intrinsic.Control.EndIf

		F.Data.DataTable.SetValue("dtClauseMaint", V.Local.iCnt, "CLAUSE_NO", V.Local.iClauseNo)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.ElseIf(V.Local.sAction,=,1)
	F.Data.DataView.Create("dtClauseMaint", "dvClauseMaint", 8)
	F.Intrinsic.Control.If(V.DataView.dtClauseMaint!dvClauseMaint.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt2, 0, V.DataView.dtClauseMaint!dvClauseMaint.RowCount--,1)
			V.Local.sClause.Set(V.DataView.dtClauseMaint!dvClauseMaint(v.Local.iCnt2).CLAUSE!FieldVal)
			V.Local.sType.Set(V.DataView.dtClauseMaint!dvClauseMaint(v.Local.iCnt2).TYPE!FieldVal)
			V.Local.iClauseNo.Set(V.DataView.dtClauseMaint!dvClauseMaint(v.Local.iCnt2).CLAUSE_NO!FieldVal)
			F.Intrinsic.String.Build("DELETE FROM GCG_6321_CLAUSEMAINT WHERE CLAUSE = '{0}' AND TYPE = '{1}' AND CLAUSE_NO = '{2}'", V.Local.sClause, V.Local.sType, V.Local.iClauseNo, V.Local.sSQL)
			F.ODBC.Connection!con.Execute(V.Local.sSQL)
		F.Intrinsic.Control.Next(V.Local.iCnt2)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.AcceptChanges("dtClauseMaint")
		
	F.Data.DataView.Close("dtClauseMaint", "dvClauseMaint")
	
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.UnBlockEvents
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.AddRemoveMaintRow.End

Program.Sub.cmdSave_Click.Start
F.Intrinsic.Control.Try

'GCG_6321_CLAUSEMAINT
F.Data.DataTable.SaveToDB("dtClauseMaint", "con", "GCG_6321_CLAUSEMAINT", "CLAUSE_NO", 256)
F.Intrinsic.UI.Msgbox("Save Successful", "")
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdSave_Click.End

Program.Sub.EditGridLoad.Start
F.Intrinsic.Control.Try
V.Local.iCnt.Declare(String)
V.Local.iClauseNo.Declare(String)
V.Local.sClause.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)

'check to see if the temp datatable is open
F.Intrinsic.Control.If(V.DataTable.dtClauses.Exists)
	F.Data.DataTable.Close("dtClauses")	
F.Intrinsic.Control.EndIf

'create shell for the grid
f.Data.DataTable.Create("dtClauses",True)
f.Data.DataTable.AddColumn("dtClauses","Selected","boolean",False)
F.Data.DataTable.AddColumn("dtClauses", "Include_WO", "Boolean", False)
F.Data.DataTable.AddColumn("dtClauses", "Include_PO", "Boolean", False)
f.Data.DataTable.AddColumn("dtClauses", "Include_Quote", "Boolean", False)
F.Data.DataTable.AddColumn("dtClauses", "Include_SO", "Boolean", False)
F.Data.DataTable.AddColumn("dtClauses", "Customer_Level", "Boolean", False)
F.Data.DataTable.AddColumn("dtClauses", "Order_Level", "Boolean", False)
F.Data.DataTable.AddColumn("dtClauses", "Line_Level", "Boolean", False)
f.Data.DataTable.AddColumn("dtClauses","Clause","string")
f.Data.DataTable.AddColumn("dtClauses","Type","string")
F.Data.DataTable.AddColumn("dtClauses", "Notes", "String")
F.Data.DataTable.AddColumn("dtClauses", "Clause_No", "Long")
F.Data.DataTable.AddColumn("dtClauses", "Customer", "String")
F.Data.DataTable.AddColumn("dtClauses", "Order_No", "String")
F.Data.DataTable.AddColumn("dtClauses", "Order_Line", "String")

F.Intrinsic.Control.CallSub(FormatEditGrid)

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.EditGridLoad.End

Program.Sub.FormatEditGrid.Start
F.Intrinsic.Control.Try
V.Local.bInGroup.Declare(String)
V.Local.sDefault.Declare(String)
V.Local.sGV.Declare(String)
V.Local.sProperty.Declare(String)

F.Global.Security.IsInGroup(V.Caller.User, "CLAUSEED", V.Caller.CompanyCode, V.Local.bInGroup)

Gui.f_Edit.GsGcClauses.AddGridviewFromDatatable("gvClauses","dtClauses")
V.Local.sGV.Set("gvClauses")
Gui.f_Edit.GsGcClauses.SetGridviewProperty(V.Local.sGV,"OptionsViewShowGroupPanel",True)
Gui.f_Edit.GsGcClauses.SetGridviewProperty(V.Local.sGV,"EnableAppearanceOddRow",True)
Gui.f_Edit.GsGcClauses.SetGridviewProperty(V.Local.sGV, "OptionsViewRowAutoHeight", True)
Gui.f_Edit.GsGcClauses.SetGridviewProperty(V.Local.sGV, "ColumnPanelRowHeight", "50")

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", "GroupIndex",0)

F.Intrinsic.Control.If(V.Local.bInGroup,=,True)
	Gui.f_Edit.cmdSave.Enabled(True)
	
	v.Local.sProperty.Set("Visible")
	V.Local.sDefault.Set("True")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	
	V.Local.sProperty.Set("AllowEdit")
	V.Local.sDefault.Set("True")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, False)

	V.Local.sProperty.Set("ReadOnly")
	V.Local.sDefault.Set("False")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty,True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, True)
F.Intrinsic.Control.Else
	Gui.f_Edit.cmdSave.Enabled(False)
	
	v.Local.sProperty.Set("Visible")
	V.Local.sDefault.Set("False")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	
	V.Local.sProperty.Set("AllowEdit")
	V.Local.sDefault.Set("False")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, False)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, V.Local.sDefault)

	V.Local.sProperty.Set("ReadOnly")
	V.Local.sDefault.Set("True")
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, True)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, V.Local.sDefault)
	Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, V.Local.sDefault)
F.Intrinsic.Control.EndIf

V.Local.sProperty.Set("Caption")
V.Local.sDefault.Set(" ")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, "Clause")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, "Type")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, "Notes")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, "Print On WO")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, "Print On PO")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, "Print On Quote")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, "Print On SO")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, "Customer")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, "Order No")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, "Order Line")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, "Added on Customer Master")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, "Added on SO Header")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, "Added on SO Line")


V.Local.sProperty.Set("HeaderWordWrap")
V.Local.sDefault.Set("Wrap")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, V.Local.sDefault)


V.Local.sProperty.Set("HeaderFontBold")
V.Local.sDefault.Set("True")
'Add grouping
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Type", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Notes", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", V.Local.sProperty, V.Local.sDefault)

v.Local.sProperty.Set("Visible")
V.Local.sDefault.Set("False")
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Clause_No", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", V.Local.sProperty, V.Local.sDefault)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", V.Local.sProperty, V.Local.sDefault)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", "MinWidth", 25)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Selected", "MaxWidth", 25)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", "MinWidth", 50)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_WO", "MaxWidth", 50)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", "MinWidth", 50)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_PO", "MaxWidth", 50)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", "MinWidth", 65)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_Quote", "MaxWidth", 65)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", "MinWidth", 50)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Include_SO", "MaxWidth", 50)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer_Level", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Level", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Line_Level", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Customer", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_No", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", "MinWidth", 75)
Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "Order_Line", "MaxWidth", 75)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "CLAUSE", "MinWidth", 150)

Gui.f_Edit.GsGcClauses.SetColumnProperty(V.Local.sGV, "NOTES", "CellWordWrap", "Wrap")

Gui.f_Edit.GsGcClauses.SetGridviewProperty(V.Local.sGV, "ExpandAllGroups", True)
Gui.f_Edit.GsGcClauses.MainView(V.Local.sGV)

F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.FormatEditGrid.End

Program.Sub.LoadCustClauses.Start
F.Intrinsic.Control.Try
V.Local.bIncludePO.Declare(Boolean)
V.Local.bIncludeQuote.Declare(Boolean)
V.Local.bIncludeWO.Declare(Boolean)
V.Local.bIncludeSO.Declare(Boolean)
V.Local.iCnt.Declare(Long)
V.Local.iClauseNo.Declare(Long)
V.Local.sClause.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sNotes.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)

F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '' AND ORDER_LINE = '' ", V.Global.sCust.Trim, V.Local.sSQL)
F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
	F.Data.DataTable.Close("dtTempClauses")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
	F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataTable.dtTempClauses.RowCount--, 1)
		V.Local.sClause.Set(v.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
		V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
		V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
		V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
		V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
		V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
		V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
		V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
		F.Data.DataTable.AddRow("dtClauses", "CUSTOMER_LEVEL", True,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Data.DataTable.Close("dtTempClauses")
	
	'check to see if the temp datatable is open
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
	F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
			V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
			F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
			F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
				F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf
	
	F.Data.DataTable.Close("dtTemp")

F.Intrinsic.Control.Else
	'check to see if the temp datatable is open
	F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
	F.Intrinsic.Control.If(V.DataTable.dtTemp.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
			V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
			F.Data.DataTable.AddRow("dtClauses", "TYPE", V.Local.sType, "CLAUSE", V.Local.sClause, "CLAUSE_NO", V.Local.iClauseNo, "CUSTOMER", V.Global.sCust.Trim)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.Close("dtTemp")
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadCustClauses.End

Program.Sub.LoadSOClauses.Start
F.Intrinsic.Control.Try
V.Local.bIncludePO.Declare(Boolean)
V.Local.bIncludeQuote.Declare(Boolean)
V.Local.bIncludeWO.Declare(Boolean)
V.Local.bIncludeSO.Declare(Boolean)
V.Local.iCnt.Declare(Long)
V.Local.iClauseNo.Declare(Long)
V.Local.sClause.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sNotes.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)

F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '' AND ORDER_LINE = '' ORDER BY CLAUSE_NO ", V.Global.sCust.Trim, V.Local.sSQL)

F.Intrinsic.Control.If(V.DataTable.dtTemp2.Exists)
	F.Data.DataTable.Close("dtTemp2")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtTemp2", "con", V.Local.sSQL)
F.Intrinsic.Control.If(v.DataTable.dtTemp2.RowCount--,>,-1)
	F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp2.RowCount--,1)
		V.Local.sClause.Set(v.DataTable.dtTemp2(v.Local.iCnt).CLAUSE!FieldValTrim)
		V.Local.sType.Set(V.DataTable.dtTemp2(V.Local.iCnt).TYPE!FieldValTrim)
		V.Local.iClauseNo.Set(V.DataTable.dtTemp2(v.Local.iCnt).CLAUSE_NO!FieldVal)
		V.Local.sNotes.Set(V.DataTable.dtTemp2(v.Local.iCnt).NOTES!FieldValTrim)
		V.Local.bIncludePO.Set(V.DataTable.dtTemp2(v.Local.iCnt).INCLUDE_PO!FieldVal)
		V.Local.bIncludeQuote.Set(V.DataTable.dtTemp2(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
		V.Local.bIncludeWO.Set(V.DataTable.dtTemp2(V.Local.iCnt).INCLUDE_WO!FieldVal)
		V.Local.bIncludeSO.Set(V.DataTable.dtTemp2(V.Local.iCnt).INCLUDE_SO!FieldVal)
		F.Data.DataTable.AddRow("dtClauses", "CUSTOMER_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Local.sSQL)

	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
		F.Data.DataTable.Close("dtTempClauses")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempClauses.RowCount--,1)
			V.Local.sClause.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
			V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
			V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
			V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
			V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
			V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
			F.Data.DataTable.AddRow("dtClauses", "ORDER_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO,"INCLUDE_SO", V.Local.bIncludeSO)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.Close("dtTempClauses")
		
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
		F.Data.DataTable.Close("dtTempClauses")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataTable.dtTempClauses.RowCount--, 1)
			V.Local.sClause.Set(v.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
			V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
			V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
			V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
			V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
			V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
			F.Data.DataTable.AddRow("dtClauses", "ORDER_LEVEL", True,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	
		F.Data.DataTable.Close("dtTempClauses")
	
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	
		F.Data.DataTable.Close("dtTemp")

	F.Intrinsic.Control.Else
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(V.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Data.DataTable.AddRow("dtClauses", "TYPE", V.Local.sType, "CLAUSE", V.Local.sClause, "CLAUSE_NO", V.Local.iClauseNo, "CUSTOMER", V.Global.sCust.Trim, "ORDER_NO", v.Global.sSO.Trim)
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadSOClauses.End

Program.Sub.LoadSOLineClauses.Start
F.Intrinsic.Control.Try
V.Local.bIncludePO.Declare(Boolean)
V.Local.bIncludeQuote.Declare(Boolean)
V.Local.bIncludeWO.Declare(Boolean)
V.Local.bIncludeSO.Declare(Boolean)
V.Local.iCnt.Declare(Long)
V.Local.iClauseNo.Declare(Long)
V.Local.sClause.Declare(String)
V.Local.sCust.Declare(String)
V.Local.sNotes.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSelect.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)

F.Intrinsic.String.Build("SELECT CUSTOMER FROM V_ORDER_HEADER WHERE ORDER_NO = '{0}'", V.Global.sSO.Trim, V.Local.sSQL)
F.ODBC.Connection!con.ExecuteAndReturn(V.Local.sSQL, V.Global.sCust)
F.Intrinsic.Control.If(V.Global.sCust.Trim,=,"")
	F.Intrinsic.UI.Msgbox("Unable to find Customer associated with the order. Please save the header and try again.", "Error")
	F.Intrinsic.Control.ExitSub
F.Intrinsic.Control.EndIf

F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '' AND ORDER_LINE = '' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Local.sSQL)

F.Intrinsic.Control.If(V.DataTable.dtTemp2.Exists)
	F.Data.DataTable.Close("dtTemp2")
F.Intrinsic.Control.EndIf

F.Data.DataTable.CreateFromSQL("dtTemp2", "con", V.Local.sSQL)
F.Intrinsic.Control.If(v.DataTable.dtTemp2.RowCount--,>,-1)
	F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp2.RowCount--,1)
		V.Local.sClause.Set(v.DataTable.dtTemp2(v.Local.iCnt).CLAUSE!FieldValTrim)
		V.Local.sType.Set(V.DataTable.dtTemp2(V.Local.iCnt).TYPE!FieldValTrim)
		V.Local.iClauseNo.Set(V.DataTable.dtTemp2(v.Local.iCnt).CLAUSE_NO!FieldVal)
		V.Local.sNotes.Set(V.DataTable.dtTemp2(v.Local.iCnt).NOTES!FieldValTrim)
		V.Local.bIncludePO.Set(V.DataTable.dtTemp2(v.Local.iCnt).INCLUDE_PO!FieldVal)
		V.Local.bIncludeQuote.Set(V.DataTable.dtTemp2(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
		V.Local.bIncludeWO.Set(V.DataTable.dtTemp2(V.Local.iCnt).INCLUDE_WO!FieldVal)
		V.Local.bIncludeSO.Set(V.DataTable.dtTemp2(V.Local.iCnt).INCLUDE_SO!FieldVal)
		F.Data.DataTable.AddRow("dtClauses", "CUSTOMER_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
	F.Intrinsic.Control.Next(V.Local.iCnt)
	
	F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Local.sSQL)

	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
		F.Data.DataTable.Close("dtTempClauses")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempClauses.RowCount--,1)
			V.Local.sClause.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
			V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
			V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
			V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
			V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
			V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
			F.Data.DataTable.AddRow("dtClauses", "ORDER_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
		F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Data.DataTable.Close("dtTempClauses")
		
		F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '{2}' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Global.sSOLine.Trim,V.Local.sSQL)

		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
		
		F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempClauses.RowCount--,1)
				V.Local.sClause.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
				V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
				V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
				V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
				V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
				V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
				F.Data.DataTable.AddRow("dtClauses", "LINE_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "ORDER_LINE", V.Global.sSOLine.Trim,"INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
		
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	
		F.Data.DataTable.Close("dtTemp")
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Local.sSQL)
	
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
		F.Data.DataTable.Close("dtTempClauses")
	F.Intrinsic.Control.EndIf

	F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
	F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
		F.Intrinsic.Control.For(V.Local.iCnt,0,v.DataTable.dtTempClauses.RowCount--, 1)
			V.Local.sClause.Set(v.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
			V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
			V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
			V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
			V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
			V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
			V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
			V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
			F.Data.DataTable.AddRow("dtClauses", "ORDER_LEVEL", True,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
		F.Intrinsic.Control.Next(V.Local.iCnt)
	
		F.Data.DataTable.Close("dtTempClauses")
		
		F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '{2}' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Global.sSOLine.Trim,V.Local.sSQL)

		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
		
		F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempClauses.RowCount--,1)
				V.Local.sClause.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
				V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
				V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
				V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
				V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
				V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
				F.Data.DataTable.AddRow("dtClauses", "LINE_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "ORDER_LINE", V.Global.sSOLine.Trim,"INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
	
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
		F.Intrinsic.Control.EndIf
	
		F.Data.DataTable.Close("dtTemp")

	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("SELECT CLAUSE, TYPE, CLAUSE_NO, NOTES, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND ORDER_NO = '{1}' AND ORDER_LINE = '{2}' ORDER BY CLAUSE_NO", V.Global.sCust.Trim, V.Global.sSO.Trim, V.Global.sSOLine.Trim,V.Local.sSQL)

		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.Exists)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
		
		F.Data.DataTable.CreateFromSQL("dtTempClauses", "con", V.Local.sSQL)
		F.Intrinsic.Control.If(V.DataTable.dtTempClauses.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt, 0, V.DataTable.dtTempClauses.RowCount--,1)
				V.Local.sClause.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.sType.Set(V.DataTable.dtTempClauses(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTempClauses(v.Local.iCnt).CLAUSE_NO!FieldVal)
				V.Local.sNotes.Set(V.DataTable.dtTempClauses(v.Local.iCnt).NOTES!FieldValTrim)
				V.Local.bIncludePO.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_PO!FieldVal)
				V.Local.bIncludeQuote.Set(V.DataTable.dtTempClauses(v.Local.iCnt).INCLUDE_QUOTE!FieldVal)
				V.Local.bIncludeWO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
				V.Local.bIncludeSO.Set(V.DataTable.dtTempClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
				F.Data.DataTable.AddRow("dtClauses", "LINE_LEVEL", TRUE,"CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo, "NOTES", V.Local.sNotes,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", v.Global.sSO.Trim, "ORDER_LINE", V.Global.sSOLine.Trim,"INCLUDE_PO", V.Local.bIncludePO, "INCLUDE_QUOTE", V.Local.bIncludeQuote, "INCLUDE_WO", V.Local.bIncludeWO, "INCLUDE_SO", V.Local.bIncludeSO)
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataTable.Close("dtTempClauses")
		F.Intrinsic.Control.EndIf
	
		'check to see if the temp datatable is open
		F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf

		F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
		F.Intrinsic.Control.If(v.DataTable.dtTemp.RowCount--,>,-1)
			F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
				V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
				V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
				V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
				F.Intrinsic.String.Build("[CLAUSE_NO] = '{0}'", V.Local.iClauseNo, v.Local.sSelect)
				F.Data.DataTable.Select("dtClauses", V.Local.sSelect, V.Local.sRet)
				F.Intrinsic.Control.If(V.Local.sRet.Trim,=,"", "OR", V.Local.sRet.Trim, =, "***NORETURN***")
					F.Data.DataTable.AddRow("dtClauses", "CLAUSE", V.Local.sClause, "TYPE", V.Local.sType, "CLAUSE_NO", V.Local.iClauseNo,"CUSTOMER", V.Global.sCust.Trim,"ORDER_NO", V.Global.sSO.Trim,"INCLUDE_PO", 0, "INCLUDE_QUOTE", 0, "INCLUDE_WO", 0, "INCLUDE_SO", 0)
				F.Intrinsic.Control.EndIf
			F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Data.DataTable.Close("dtTemp")
			
		F.Intrinsic.Control.Else
			'check to see if the temp datatable is open
			F.Intrinsic.Control.If(V.DataTable.dtTemp.Exists)
				F.Data.DataTable.Close("dtTemp")
			F.Intrinsic.Control.EndIf
			
			F.Data.DataTable.CreateFromSQL("dtTemp", "con", "SELECT * FROM GCG_6321_CLAUSEMAINT ORDER BY CLAUSE_NO")
			F.Intrinsic.Control.If(V.DataTable.dtTemp.RowCount--,>,-1)
				F.Intrinsic.Control.For(V.Local.iCnt,0, V.DataTable.dtTemp.RowCount--,1)
					V.Local.sType.Set(V.DataTable.dtTemp(V.Local.iCnt).TYPE!FieldValTrim)
					V.Local.sClause.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE!FieldValTrim)
					V.Local.iClauseNo.Set(V.DataTable.dtTemp(V.Local.iCnt).CLAUSE_NO!FieldVal)
					F.Data.DataTable.AddRow("dtClauses", "TYPE", V.Local.sType, "CLAUSE", V.Local.sClause, "CLAUSE_NO", V.Local.iClauseNo, "CUSTOMER", V.Global.sCust.Trim, "ORDER_NO", v.Global.sSO.Trim)
				F.Intrinsic.Control.Next(V.Local.iCnt)
			F.Intrinsic.Control.EndIf

			F.Data.DataTable.Close("dtTemp")
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.EndIf


F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.LoadSOLineClauses.End

Program.Sub.cmdEditSave_Click.Start
F.Intrinsic.Control.Try
V.Local.bIncludePO.Declare(Boolean)
V.Local.bIncludeQuote.Declare(Boolean)
V.Local.bIncludeWO.Declare(Boolean)
V.Local.bIncludeSO.Declare(Boolean)
V.Local.iClauseNo.Declare(Long)
V.Local.iCnt.Declare(Long)
V.Local.sClause.Declare(String)
V.Local.sCustomer.Declare(String)
V.Local.sNotes.Declare(String)
V.Local.sRet.Declare(String)
V.Local.sSO.Declare(String)
V.Local.sSOLine.Declare(String)
V.Local.sSQL.Declare(String)
V.Local.sType.Declare(String)


F.Intrinsic.Control.For(v.Local.iCnt, 0, V.DataTable.dtClauses.RowCount--,1)
	F.Intrinsic.Control.If(V.DataTable.dtClauses(V.Local.iCnt).SELECTED!FieldVal,=,True)
		V.Local.sClause.Set(V.DataTable.dtClauses(V.Local.iCnt).CLAUSE!FieldValTrim)
		V.Local.sType.Set(V.DataTable.dtClauses(V.Local.iCnt).TYPE!FieldValTrim)
		V.Local.iClauseNo.Set(V.DataTable.dtClauses(V.Local.iCnt).CLAUSE_NO!FieldVal)
		V.Local.sNotes.Set(V.DataTable.dtClauses(V.Local.iCnt).NOTES!FieldValTrim)
		V.Local.sCustomer.Set(V.DataTable.dtClauses(V.Local.iCnt).CUSTOMER!FieldValTrim)
		V.Local.sSO.Set(V.DataTable.dtClauses(V.Local.iCnt).ORDER_NO!FieldValTrim)
		V.Local.sSOLine.Set(V.DataTable.dtClauses(V.Local.iCnt).ORDER_LINE!FieldValTrim)
		V.Local.bIncludePO.Set(V.DataTable.dtClauses(V.Local.iCnt).INCLUDE_PO!FieldVal)
		V.Local.bIncludeQuote.Set(V.DataTable.dtClauses(V.Local.iCnt).INCLUDE_QUOTE!FieldVal)
		V.Local.bIncludeWO.Set(v.DataTable.dtClauses(V.Local.iCnt).INCLUDE_WO!FieldVal)
		V.Local.bIncludeSO.Set(v.DataTable.dtClauses(V.Local.iCnt).INCLUDE_SO!FieldVal)
		F.Intrinsic.Control.SelectCase(V.Global.sFlag)
		F.Intrinsic.Control.Case("CM")
			F.Intrinsic.String.Build("SELECT * FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND CLAUSE_NO = '{1}' AND ORDER_NO = '' AND ORDER_LINE = '' ", V.Local.sCustomer.Trim, V.Local.iClauseNo, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
				F.Intrinsic.String.Build("UPDATE GCG_6321_CLAUSES SET CLAUSE = '{0}', TYPE = '{1}', NOTES = '{2}', ORDER_NO = '', ORDER_LINE = '', INCLUDE_PO = {3}, INCLUDE_QUOTE = {4}, INCLUDE_WO = {5}, INCLUDE_SO = {6} WHERE CUSTOMER = '{7}' AND CLAUSE_NO = '{8}' AND ORDER_NO = '' AND ORDER_LINE = '' ", V.Local.sClause.Trim, V.Local.sType.Trim, V.Local.sNotes.Trim, V.Local.bIncludePO.long, V.Local.bIncludeQuote.Long, v.Local.bIncludeWO.long, v.Local.bIncludeSO.Long, V.Global.sCust.Trim, V.Local.iClauseNo, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("INSERT INTO GCG_6321_CLAUSES (CLAUSE, TYPE, CLAUSE_NO, CUSTOMER, ORDER_NO, ORDER_LINE, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO, NOTES) VALUES ('{0}', '{1}', '{2}', '{3}','{4}', '{5}', {6}, {7}, {8}, {9}, '{10}') ", V.Local.sClause.Trim, v.Local.sType.Trim, V.Local.iClauseNo, V.Global.sCust.Trim, V.Local.sSO.Trim, V.Local.sSOLine.Trim, v.Local.bIncludeWO.long, v.Local.bIncludePO.long, v.Local.bIncludeQuote.Long, V.Local.bIncludeSO.Long, V.Local.sNotes.Trim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Case("SO")
		
			F.Intrinsic.String.Build("SELECT * FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND CLAUSE_NO = '{1}' AND ORDER_NO = '{2}' AND ORDER_LINE = '' ", V.Local.sCustomer.Trim, V.Local.iClauseNo, V.Global.sSO.Trim, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
				F.Intrinsic.String.Build("UPDATE GCG_6321_CLAUSES SET CLAUSE = '{0}', TYPE = '{1}', NOTES = '{2}', ORDER_LINE = '', INCLUDE_PO = {3}, INCLUDE_QUOTE = {4}, INCLUDE_WO = {5}, INCLUDE_SO = {6} WHERE CUSTOMER = '{7}' AND CLAUSE_NO = '{8}' AND ORDER_NO = '{9}' AND ORDER_LINE = '' ", V.Local.sClause.Trim, V.Local.sType.Trim, V.Local.sNotes.Trim, V.Local.bIncludePO.long, V.Local.bIncludeQuote.Long, v.Local.bIncludeWO.long, V.Local.bIncludeSO.Long, V.Global.sCust.Trim, V.Local.iClauseNo, V.Global.sSO.Trim, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("INSERT INTO GCG_6321_CLAUSES (CLAUSE, TYPE, CLAUSE_NO, CUSTOMER, ORDER_NO, ORDER_LINE, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO, NOTES) VALUES ('{0}', '{1}', '{2}', '{3}','{4}', '{5}', {6}, {7}, {8}, {9}, '{10}') ", V.Local.sClause.Trim, v.Local.sType.Trim, V.Local.iClauseNo, V.Global.sCust.Trim, V.Global.sSO.Trim, V.Local.sSOLine.Trim, v.Local.bIncludeWO.long, v.Local.bIncludePO.long, v.Local.bIncludeQuote.Long, V.Local.bIncludeSO.Long, V.Local.sNotes.Trim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Case("SL")
		
			F.Intrinsic.String.Build("SELECT * FROM GCG_6321_CLAUSES WHERE CUSTOMER = '{0}' AND CLAUSE_NO = '{1}' AND ORDER_NO = '{2}' AND ORDER_LINE = '{3}' ", V.Local.sCustomer.Trim, V.Local.iClauseNo, V.Global.sSO.Trim,  V.Global.sSOLine.Trim, V.Local.sSQL)
			F.ODBC.Connection!con.ExecuteAndReturn(v.Local.sSQL, V.Local.sRet)
			F.Intrinsic.Control.If(V.Local.sRet.Trim,<>,"")
				F.Intrinsic.String.Build("UPDATE GCG_6321_CLAUSES SET CLAUSE = '{0}', TYPE = '{1}', NOTES = '{2}', ORDER_LINE = '{10}', INCLUDE_PO = {3}, INCLUDE_QUOTE = {4}, INCLUDE_WO = {5}, INCLUDE_SO = {6} WHERE CUSTOMER = '{7}' AND CLAUSE_NO = '{8}' AND ORDER_NO = '{9}' AND ORDER_LINE = '{10}' ", V.Local.sClause.Trim, V.Local.sType.Trim, V.Local.sNotes.Trim, V.Local.bIncludePO.long, V.Local.bIncludeQuote.Long, v.Local.bIncludeWO.long, V.Local.bIncludeSO.Long, V.Global.sCust.Trim, V.Local.iClauseNo, V.Global.sSO.Trim, V.Global.sSOLine.Trim, V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.Else
				F.Intrinsic.String.Build("INSERT INTO GCG_6321_CLAUSES (CLAUSE, TYPE, CLAUSE_NO, CUSTOMER, ORDER_NO, ORDER_LINE, INCLUDE_WO, INCLUDE_PO, INCLUDE_QUOTE, INCLUDE_SO, NOTES) VALUES ('{0}', '{1}', '{2}', '{3}','{4}', '{5}', {6}, {7}, {8}, {9}, '{10}') ", V.Local.sClause.Trim, v.Local.sType.Trim, V.Local.iClauseNo, V.Global.sCust.Trim, V.Global.sSO.Trim, V.Global.sSOLine.Trim, v.Local.bIncludeWO.long, v.Local.bIncludePO.long, v.Local.bIncludeQuote.Long, V.Local.bIncludeSO.Long, V.Local.sNotes.Trim,V.Local.sSQL)
				F.ODBC.Connection!con.Execute(V.Local.sSQL)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.EndSelect
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Next(v.Local.iCnt)


F.Data.DataTable.SetValue("dtClauses", -1, "SELECTED", 0)
F.Data.DataTable.AcceptChanges("dtClauses")

F.Intrinsic.UI.Msgbox("Save Successful", "")
F.Intrinsic.Control.ExitSub

F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.cmdEditSave_Click.End

Program.Sub.Form_UnLoad.Start
F.Intrinsic.Control.Try 

F.ODBC.Connection!con.Close
f.Intrinsic.Control.End
	
F.Intrinsic.Control.Catch
	F.Intrinsic.Control.CallSub(ErrorMessage, "ErrorNumber", V.Ambient.ErrorNumber, "ErrorDescription", V.Ambient.ErrorDescription, "Subroutine", V.Ambient.CurrentSubroutine, "UNATTENDED", V.Global.bUnattended, "Project", "6321", "ProjectTitle", "Government Flowdown", "Callback", "Form_Unload")
F.Intrinsic.Control.EndTry
Program.Sub.Form_UnLoad.End

Program.Sub.ErrorMessage.Start
'basic error message for replacing catch block
'this is really just for when printing the message and ending program
'pass error number, error description, current subroutine
'optional callback sub, this will be called before ending
'optional unattended parameters, those subs may not exist if not using them but won't be called
F.Intrinsic.Control.Try

V.Local.iError.Declare(Long)
V.Local.sErrorDescription.Declare(String)
V.Local.sSubroutine.Declare(String)
V.Local.sError.Declare(String)
V.Local.bExists.Declare(Boolean)
V.Local.sCallback.Declare(String)

V.Local.iError.Set(V.Args.ErrorNumber)
V.Local.sErrorDescription.Set(V.Args.ErrorDescription)
V.Local.sSubroutine.Set(V.Args.Subroutine)

'make sure we aren't in an error loop
F.Intrinsic.Control.If(V.Global.bError)
	F.Intrinsic.Control.End

F.Intrinsic.Control.EndIf
V.Global.bError.Set(True)

F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}", V.Caller.ScriptFile, V.Ambient.Newline, V.Local.sSubroutine, V.Local.iError, V.Local.sErrorDescription, V.Ambient.GABVersion, V.Local.sError)

F.Intrinsic.Variable.ArgExists("UNATTENDED", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	F.Intrinsic.Control.If(V.Args.UNATTENDED)
		F.Intrinsic.Control.CallSub(UnattendedErrorMessage, "MESSAGE", V.Local.sError, "PROJECT", V.Args.PROJECT, "PROJECTTITLE", V.Args.PROJECTTITLE)
	F.Intrinsic.Control.Else
		F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.EndIf
F.Intrinsic.Control.Else
	F.Intrinsic.UI.Msgbox(V.Local.sError)
F.Intrinsic.Control.EndIf

F.Intrinsic.Variable.ArgExists("Callback", V.Local.bExists)
F.Intrinsic.Control.If(V.Local.bExists)
	V.Local.sCallback.Set(V.Args.Callback.Trim)
	F.Intrinsic.Control.CallSub(V.Local.sCallback)
F.Intrinsic.Control.EndIf

F.Intrinsic.Control.End

F.Intrinsic.Control.Catch
	F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Caller.ScriptFile,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
	F.Intrinsic.UI.Msgbox(V.Local.sError)
	F.Intrinsic.Control.End
F.Intrinsic.Control.EndTry
Program.Sub.ErrorMessage.End

Program.Sub.Comments.Start
${$5$}$20.1.8315.16327$}$1
${$6$}$acollins$}$20221021181905748$}$h98hERc2yV72q0GaUGlwSaoK/aefTdVk3MDOmjKC8J+fykc4Lu4NVSAXLPBQyj1nYHP9lPNH3EPSf4gaVOgPXw==
Program.Sub.Comments.End